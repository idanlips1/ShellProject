class ShellGame {
    field Array shells;     
    field int ballPosition; 
    field int shellWidth;   
    field int shellHeight;  
    field int money;       
    
    constructor ShellGame new() {
        let shells = Array.new(3);
        let shells[0] = 0;
        let shells[1] = 0;
        let shells[2] = 0;
        let shellWidth = 60;
        let shellHeight = 40;
        let money = 100;    
        return this;
    }

    method void dispose() {
        do shells.dispose();
        do Memory.deAlloc(this);
        return;
    }

    


    method void drawShell(int x, int y) {
        // Main shell shape
        do Screen.drawLine(x, y + shellHeight, x, y + 10);
        do Screen.drawLine(x, y + 10, x + (shellWidth/2), y);
        do Screen.drawLine(x + (shellWidth/2), y, x + shellWidth, y + 10);
        do Screen.drawLine(x + shellWidth, y + 10, x + shellWidth, y + shellHeight);
        
        // Detail lines
        do Screen.drawLine(x + 5, y + 15, x + shellWidth - 5, y + 15);
        do Screen.drawLine(x + 10, y + 20, x + shellWidth - 10, y + 20);
        return;
    }

    method void drawShells() {
        var int baseX, baseY, i;
        let baseY = 100;
        let i = 0;
        
        while (i < 3) {
            let baseX = 100 + (i * (shellWidth + 20));
            do drawShell(baseX, baseY);
            do Output.moveCursor(15, 13 + (i * 8));
            do Output.printInt(i + 1);
            let i = i + 1;
        }
        return;
    }

    method void showBall(int position) {
        var int ballX, ballY;
        let ballX = 130 + (position * (shellWidth + 20));
        let ballY = 130;
        do Screen.drawCircle(ballX, ballY, 5);
        return;
    }

 method void initGame() {
    var int startPos;
    
    // Clear all shells
    let shells[0] = 0;
    let shells[1] = 0;
    let shells[2] = 0;
    
    
    // Get random starting position (0-2)
    let startPos = getRandom();
    
    // Place the ball
    let ballPosition = startPos;
    let shells[ballPosition] = 1;
    
    // Draw initial state
    do Screen.clearScreen();
    do drawShells();
    do showBall(ballPosition);
    do Sys.wait(500);
    do Screen.clearScreen();
    do drawShells();
    return;
}



    method void animateShellSwap(int pos1, int pos2) {
        var int x1, x2, y, steps, i, j;
        var int dx;
        var Array xPositions;
        
        let xPositions = Array.new(3);
        let y = 100;
        let steps = 20;
        
        let i = 0;
        while (i < 3) {
            let xPositions[i] = 100 + (i * (shellWidth + 20));
            let i = i + 1;
        }
        
        let dx = ((xPositions[pos2] - xPositions[pos1]) / steps);
        
        let i = 0;
        while (i < steps) {
            do Screen.clearScreen();
            
            let j = 0;
            while (j < 3) {
                if (j = pos1) {
                    do drawShell(xPositions[pos1] + (dx * i), y);
                } else { 
                    if (j = pos2) {
                        do drawShell(xPositions[pos2] - (dx * i), y);
                    } else {
                        do drawShell(xPositions[j], y);
                    }
                }
                do Output.moveCursor(15, 13 + (j * 8));
                do Output.printInt(j + 1);
                let j = j + 1;
            }
            
            do Sys.wait(50);
            let i = i + 1;
        }
        
        do xPositions.dispose();
        do drawShells();
        return;
    }

    method void swapShells(int pos1, int pos2) {
        var int temp;
        let temp = shells[pos1];
        let shells[pos1] = shells[pos2];
        let shells[pos2] = temp;
        return;
    }

   method int getRandom() {
    var int randomNumber;
    do Random.setSeed(Random.randRange(25)); 

        // Generate a random number between 0 and 2, then shift to the range 1-3
        let randomNumber = Random.randRange(2);
        return randomNumber;
}



    
  method void shuffle() {
    var int newPosition;
    
    do Output.println();
    do Output.println();
    do Output.printString("Shuffling shells...");
    do Output.println();
    
    // Clear all shells
    let shells[0] = 0;
    let shells[1] = 0;
    let shells[2] = 0;
    
    
    let newPosition = getRandom();
    
    // Update ball position and shell array
    let ballPosition = newPosition;
    let shells[ballPosition] = 1;
    
    // Redraw shells
    do Screen.clearScreen();
    do drawShells();
    return;
}





    method boolean makeGuess(int guess) {
        if (guess < 0) { return false; }
        if (guess > 2) { return false; }
        return (shells[guess] = 1);
    }

    method int getBallPosition() {
        return ballPosition;
    }

    method void revealBall() {
        do showBall(ballPosition);
        return;
    }

    method int getMoney() {
        return money;
    }

    method void addWinnings() {
        let money = money + 50;
        return;
    }

    method boolean placeBet() {
        if (money < 10) {
            return false;
        }
        let money = money - 10;
        return true;
    }
}

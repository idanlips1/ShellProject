class ShellGame {
    field Array shells;     
    field int ballPosition; 
    field int shellWidth;   
    field int shellHeight;  
    field int money;       
    
    // Constructor
    constructor ShellGame new() {
        let shells = Array.new(3);
        let shells[0] = 0;
        let shells[1] = 0;
        let shells[2] = 0;
        let shellWidth = 60;
        let shellHeight = 40;
        let money = 100;    
        return this;
    }

    // Dispose method
    method void dispose() {
        do shells.dispose();
        do Memory.deAlloc(this);
        return;
    }

    // Random number generator (0-2)
    method int getRandom() {
        return Memory.peek(0) & 3;
    }

    // Draw a single shell
    method void drawShell(int x, int y) {
        // Main shell shape
        do Screen.drawLine(x, y + shellHeight, x, y + 10);
        do Screen.drawLine(x, y + 10, x + (shellWidth/2), y);
        do Screen.drawLine(x + (shellWidth/2), y, x + shellWidth, y + 10);
        do Screen.drawLine(x + shellWidth, y + 10, x + shellWidth, y + shellHeight);
        
        // Detail lines
        do Screen.drawLine(x + 5, y + 15, x + shellWidth - 5, y + 15);
        do Screen.drawLine(x + 10, y + 20, x + shellWidth - 10, y + 20);
        return;
    }

    // Draw all shells
    method void drawShells() {
        var int baseX, baseY, i;
        let baseY = 100;
        let i = 0;
        
        while (i < 3) {
            let baseX = 100 + (i * (shellWidth + 20));
            do drawShell(baseX, baseY);
            do Output.moveCursor(15, 13 + (i * 8));
            do Output.printInt(i + 1);  // Numbers 1,2,3
            let i = i + 1;
        }
        return;
    }

    // Show ball
    method void showBall(int position) {
        var int ballX, ballY;
        let ballX = 130 + (position * (shellWidth + 20));
        let ballY = 130;
        do Screen.drawCircle(ballX, ballY, 5);
        return;
    }

    // Initialize game
    method void initGame() {
        let ballPosition = getRandom();
        let shells[ballPosition] = 1;
        do Screen.clearScreen();
        do drawShells();
        do showBall(ballPosition);  
        do Sys.wait(1000);         // Show ball position briefly
        do Screen.clearScreen();    
        do drawShells();           
        return;
    }

    // Animate shell swap
    method void animateShellSwap(int pos1, int pos2) {
        var int x1, x2, y, steps, i;
        var int dx;
        
        let y = 100;
        let x1 = 100 + (pos1 * (shellWidth + 20));
        let x2 = 100 + (pos2 * (shellWidth + 20));
        let steps = 20;
        let dx = ((x2 - x1) / steps);
        
        let i = 0;
        while (i < steps) {
            do Screen.clearScreen();
            // Draw all shells
            if (pos1 > pos2) {
                do drawShell(x2 - (dx * i), y);
                do drawShell(x1 + (dx * i), y);
            } else {
                do drawShell(x1 + (dx * i), y);
                do drawShell(x2 - (dx * i), y);
            }
            do Sys.wait(50);
            let i = i + 1;
        }
        do drawShells();  // Redraw final position
        return;
    }

    // Swap shells in array
    method void swapShells(int pos1, int pos2) {
        var int temp;
        let temp = shells[pos1];
        let shells[pos1] = shells[pos2];
        let shells[pos2] = temp;
        return;
    }

    // Shuffle shells
    method void shuffle() {
        var int i, swaps, pos1, pos2;
        let swaps = 5;
        
        let i = 0;
        while (i < swaps) {
            let pos1 = getRandom();
            let pos2 = getRandom();
            if (~(pos1 = pos2)) {
                do animateShellSwap(pos1, pos2);
                do swapShells(pos1, pos2);
            }
            let i = i + 1;
        }
        return;
    }

    // Check player's guess
    method boolean makeGuess(int guess) {
        if (guess < 0) { return false; }
        if (guess > 2) { return false; }
        return (shells[guess] = 1);
    }

    // Get ball position
    method int getBallPosition() {
        return ballPosition;
    }

    // Reveal ball location
    method void revealBall() {
        do showBall(ballPosition);
        return;
    }

    // Money management methods
    method int getMoney() {
        return money;
    }

    method void addWinnings() {
        let money = money + 50;
        return;
    }

    method boolean placeBet() {
        if (money < 10) {
            return false;
        }
        let money = money - 10;
        return true;
    }
}


